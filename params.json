{"name":"Partition Stability","tagline":"","body":"###############################################################################\r\nCopyright (C) 2012 A. Delmotte, M. Schaub, S. Yaliraki, M. Barahona\r\n\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program. If not, see <http://www.gnu.org/licenses/>.\r\n\r\n###############################################################################\r\n\r\n-----------------------------------------------------------------------------\r\nCommunity Detection using the stability of a graph partition.\r\n-----------------------------------------------------------------------------\r\n\r\nThe code implements the stability method as introduced in the article\r\n\r\n(1) \"Stability of graph communities across time scales\" \r\nDelvenne, J.-C.; Yaliraki, S. N. & Barahona, M. \r\narXiv:0812.1811 (2009)\r\nand then published in \r\nProceedings of the National Academy of Sciences, 2010, 107, 12755-12760;\r\n\r\nand further expanded in:\r\n\r\n(2) \"Laplacian Dynamics and Multiscale Modular Structure in Networks\"\r\nLambiotte, R.; Delvenne, J.-C. & Barahona, M.\r\narxiv:0812.1770 (2009)\r\n\r\nand\r\n\r\n(3) J.-C. Delvenne, M. T. Schaub, S. N. Yaliraki, and M. Barahona, \r\n\"The stability of a graph partition: A dynamics-based framework for community \r\ndetection\" in Time Varying Dynamical Networks (N. Ganguly, A. Mukherjee, \r\nM. Choudhury, F. Peruani, and B. Mitra, eds.), Birkhauser, Springer,\r\n2012. to be published.\r\n\r\n\r\nTo optimize the stability quality function, we use the Louvain algorithm as \r\ndescribed in the publication:\r\n\r\n(4) \"Fast unfolding of communities in large networks\",\r\nVincent D Blondel, Jean-Loup Guillaume, Renaud Lambiotte, Etienne Lefebvre,\r\nJournal of Statistical Mechanics: Theory and Experiment 2008 (10), P10008\r\n\r\nThe folder  /demo/ contains three examples to demonstrate the main functionality \r\nof the program:\r\n\r\n(i) demo.mat : A simple network with a multiscale community structure.  \r\n(ii) Protein_Adk.mat : A graph representation of the protein Adenylate Kinase \r\n  (AdK) as described in\r\n\r\n(5) \"Protein multi-scale organization through graph partitioning and robustness \r\nanalysis: application to the myosinâ€“myosin light chain interaction\"\r\nDelmotte, A.; Tate, E. W.; Yaliraki, S. N. & Barahona, M. \r\nPhysical Biology, 2011, 8, 055010\r\n\r\n(ii) ring_of-rings.mat  : The \"ring-of-rings\" graph introduced in:\r\n\r\n(6) \"Markov dynamics as a zooming lens for multiscale community detection: \r\nnon clique-like communities and the field-of-view limit\"\r\nSchaub, M. T.; Delvenne, J.-C.; Yaliraki, S. N. & Barahona, M. \r\nPLoS ONE, Public Library of Science, 2012, 7, e32210\r\n\r\nFurther example graphs are available on request. \r\n\r\n***If you make use of any part of this toolbox, please cite the \r\nrespective articles.***\r\n\r\nFor detailed instructions on how to compile the code in MATLAB see below.\r\nIf you find a bug or have further comments, please send an email and if \r\nnecessary the input file and the parameters that caused the error.\r\n\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\nAuthors   : A. Delmotte and M. Schaub  \r\nEmail     : antoine.delmotte09@imperial.ac.uk, michael.schaub09@imperial.ac.uk  \r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\r\n###############################################################################\r\n\r\n-----------------------------------------------------------------------------\r\nContributions to the code\r\n-----------------------------------------------------------------------------\r\n\r\nThe C++ code performing the stability optimization is based on the \r\nimplementation of the Louvain method as available from \r\nhttp://sites.google.com/site/findcommunities/ \r\n(Authors: Jean-Loup Guillaume / Etienne Lefebvre)\r\n\r\nThe Louvain code was adapted and extended by R. Lambiotte \r\n(http://www.lambiotte.be) to allow for the optimization of the stability quality \r\nfunction and was subsequently refined further by Antoine Delmotte. \r\n\r\nThe MATLAB frontend was initally added by Antoine Delmotte. \r\nVersion 2.0 which updates the first release and includes the addition of \r\ndirected stability was created by Michael Schaub. \r\nFinal adjustments and additions, testing, and maintenance are due to \r\nAntoine Delmotte and Michael Schaub.\r\n\r\n\r\n###############################################################################\r\n\r\n-----------------------------------------------------------------------------\r\nHow to install the stability package\r\n-----------------------------------------------------------------------------\r\n\r\n1. Open Matlab\r\n\r\n2. Make sure you have a C++ compiler installed\r\n  * For Linux, you can find one here: \r\n    http://www.gnu.org/software/gcc/\r\n  * For Windows, you can use Visual C++ express: \r\n    http://www.microsoft.com/express/Windows/\r\n\r\n3. Make sure mex is properly configured in Matlab:\r\n  * Type \"mex -setup\" in Matlab, and choose your compiler.\r\n\r\n4. In Matlab, go into the directory of the Stability toolbox.\r\n\r\n5. Type \"Install_Stability\" in the Matlab command window.\r\n  * If you get an error message concerning the libstdc++.so file, \r\n    you may want to try the following manipulation:\r\n\r\n        cd \"Matlab_root_directory\"/sys/os/glnx86/\r\n        sudo mv libgcc_s.so.1 libgcc_s.so.1.back\r\n        sudo mv libstdc++.so.6 libstdc++.so.6.back\r\n\r\n6. You will get a messge asking whether the stability toolbox should \r\n   be added to your Matlab path. Answering yes will allow you to use \r\n   the stability toolbox functions as standard Matlab functions.\r\n            \r\n7. Type \"help stability\" in Matlab to discover how to use the code.\r\n\r\n8. Try this example to check that everything is working:\r\n    \r\n        cd('demo');   % go into the demo directory (in the stability folder)\r\n        load demo;    % load data and then run stability\r\n        [S, N, VI, C] = stability(Graph,Time,'plot','v');\r\n\r\nNOTES:\r\n\r\n* The install script provides the option to add the bin folder to your \r\nMatlab path. This will enable you to use stability as a standard Matlab \r\nfunction from any directory. If you don't want this option any more,\r\njust remove it from the path by going in File/Set Path.\r\n\r\n* If you get a warning message concerning savepath, and you want the \r\nstability code to be in your path, go, after the installation, in \r\nFile/Set Path, and choose \"save\". Then choose where you want pathdef.m\r\nto be saved. If at the next matlab startup, you notice that stability is\r\nnot in your matlab path anymore, try editing/creating the \"startup.m\" file\r\nfrom your matlab user folder (type userpath to know where it is located)\r\nand add the following line: addpath(' path to bin folder of stability \r\npackage '). Alternatively, if you are the only user on your machine, you\r\ncan start matlab as a superuser (\"sudo matlab\" in linux) and rerun the\r\n\"Install_Stability\" script. This will permanently add the stability folder \r\nin the path for all users.\r\n\r\n* To speed up the calculations, you might consider adding the\r\noption 'noVI'. This disables the calculation of the variation of information, \r\nwhich is usually slow at small Markov times, when the number of \r\ncommunities found is big. \r\nAnother option is to decrease the number of optimisations on which the variation \r\nof information is calculated. To do so, add the option 'M' and put a value\r\nsuch that M < L (L is the number of louvain optimisations).  \r\nExample:\r\n \r\n    [S, N, VI, C] = stability(Graph,time,'plot','v', 'L', 100, 'M', 10);\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}